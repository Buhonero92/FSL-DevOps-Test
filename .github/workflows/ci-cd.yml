name: CI Pipeline for my App

on:
  push:
    branches:
      - "**"
  pull_request:
    types: [
      opened, 
      edited
    ]
    branches:
      - devel
      - stage
      - prod

jobs:
  config:
    runs-on: ubuntu-latest

    outputs:
      deployment_environment: ${{ steps.set_env.outputs.deployment_environment }}

    steps:
    - name: Set Development environment
      id: set_env
      if: ${{ github.ref == 'refs/heads/devel' }}
      run: |
        echo "DEPLOYMENT_ENVIRONMENT=Development" >> $GITHUB_ENV
        echo "::set-output name=deployment_environment::Development"

    - name: Set Staging environment
      id: set_env_stage
      if: ${{ github.ref == 'refs/heads/stage' }}
      run: |
        echo "DEPLOYMENT_ENVIRONMENT=Staging" >> $GITHUB_ENV
        echo "::set-output name=deployment_environment::Staging"

    - name: Set Production environment
      id: set_env_prod
      if: ${{ github.ref == 'refs/heads/prod' }}
      run: |
        echo "DEPLOYMENT_ENVIRONMENT=Production" >> $GITHUB_ENV
        echo "::set-output name=deployment_environment::Production"

    - name: Set Default Environment
      id: default_env
      run: |
        echo "::set-output name=deployment_environment::${{ env.DEPLOYMENT_ENVIRONMENT || 'Development' }}"

  build:
    runs-on: ubuntu-latest

    needs:
      - config

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js env
        uses: actions/setup-node@v4
        with:
          node-version: '15.x'

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint

      - name: Run formatter
        run: npm run prettier --check
      
      - name: Run tests
        run: CI=true npm run test

      - name: Build app
        run: npm run build

  infrastructure-deployment:
    if: |
      github.event_name == 'push' && 
      (github.ref == 'refs/heads/devel' || github.ref == 'refs/heads/stage' || github.ref == 'refs/heads/prod')   
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: 'us-east-1'

      - name: Terraform Init
        run: |
          cd infrastructure
          terraform init
      
      - name: Terraform plan
        run: |
          cd infrastructure
          terraform plan -var "environment=${{ needs.config.outputs.deployment_environment }}"

      - name: Terraform Apply
        run: |
          cd infrastructure 
          terraform apply --auto-approve -var "environment=${{ needs.config.outputs.deployment_environment }}"

  application-deployment:
    runs-on: ubuntu-latest
    needs:
      - infrastructure-deployment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy the app to s3 bucket
        run: |
          aws s3 sync src s3://static-webapp-${{ needs.config.outputs.deployment_environment }}